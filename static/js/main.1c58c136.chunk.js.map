{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","image","setImage","result","setResult","print","setPrint","className","md","class","icon","id","onChange","event","target","value","type","placeholder","onClick","console","log","url","axios","get","then","response","data","results","map","src","urls","thumb","width","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMA0EeA,MArEf,WACE,IACA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAmBA,OACE,sBACAC,UAAU,MADV,UAEE,qBACAA,UAAU,UADV,SAEE,kDAEJ,eAAC,IAAD,CAAQC,GAAG,IAAX,UACA,sBAAKD,UAAU,YAAf,UACC,qBAAKA,UAAU,0BAAf,SACC,sBACAA,UAAU,wBADV,SAEA,sBAAKE,MAAM,aAAX,UACE,cAAC,IAAD,CAASC,KAAK,WACd,uBAAOC,GAAG,MACVJ,UAAU,oDAAoDK,SAhC/C,SAACC,GACpBX,EAASW,EAAMC,OAAOC,OACtBT,GAAS,IA8BiFU,KAAK,OAAOC,YAAY,SAAS,aAAW,kBAInI,qBAAKV,UAAU,4BAAf,SACI,wBAAQI,GAAG,MAAMK,KAAK,SAASE,QAhCnB,WACnBC,QAAQC,IAAInB,GACZK,GAAS,GACT,IAAMe,EAAM,uDAAyDpB,EAAzD,yDACZqB,IAAMC,IAAIF,GAAKG,MAAK,SAACC,GACnBN,QAAQC,IAAIK,GACZrB,EAAUqB,EAASC,KAAKC,aA0BnB,yBAKP,qBAAKhB,GAAG,YAAR,SACMN,EAAM,gCAAK,wCAAe,6DAAwC,UAKtE,qBACAE,UAAU,SADV,SAEGJ,EAAOyB,KAAI,SAAC3B,GAAD,OACV,mCACE,qBACAM,UAAU,OADV,SAEE,qBAAKsB,IAAK5B,EAAM6B,KAAKC,MAAOC,MAAM,QAAQC,OAAO,QAAQ,gBAAc,sBCtDtEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.1c58c136.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { MDBCol, MDBIcon } from \"mdbreact\";\nimport axios from 'axios';\nimport { useState } from 'react';\nfunction App() {\n  const max = 50;\n  const [image, setImage] = useState(\"\");\n  const clientId = \"9F9k2gOeFgxuyjKqIrt37VPJrxRGxfyBVc-Mzpt0kxI\";\n  const [result, setResult] = useState([]);\n  const [print, setPrint] = useState(false);\n\n  const handleChange = (event) => {\n    setImage(event.target.value);\n    setPrint(false)\n  };\n  \n  const handleSubmit = () => {\n    console.log(image);\n    setPrint(true);\n    const url = \"https://api.unsplash.com/search/photos?page=1&query=\" + image + \"&client_id=\" + clientId;\n    axios.get(url).then((response) => {\n      console.log(response);\n      setResult(response.data.results);\n    });\n  };\n\n  \n\n  return (\n    <div \n    className='app'>\n      <div \n      className='heading'>\n        <h1>Search Images.</h1>\n      </div>\n    <MDBCol md=\"6\">\n    <div className=\"input-bar\">\n     <div className=\"input-bar-item width100\">\n      <form \n      className=\"form-inline mt-4 mb-4\">\n      <div class=\"form-group\">\n        <MDBIcon icon=\"search\" />\n        <input id=\"int\" \n        className=\"form-group form-control form-control-sm ml-3 w-75\" onChange={handleChange} type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\n      </div>\n      </form>\n      </div>\n       <div className=\"input-bar-item form-group\">\n           <button id=\"btn\" type='submit' onClick={ handleSubmit}>Search</button>\n        </div>\n        \n     \n    </div>\n    <div id='table-row'>{\n          print?<div><h2>RANDOM</h2><h5>40 images has been found</h5></div>:null\n        }</div>\n    \n    </MDBCol>\n      \n      <div \n      className=\"result\">\n        {result.map((image) => (\n          <>\n            <div \n            className=\"card\">\n              <img src={image.urls.thumb} width='200px' height='200px' border-radius='20px' />\n            </div>\n          </>\n        ))}\n      </div>\n    </div>);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}